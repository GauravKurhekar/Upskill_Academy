Joins
CREATE TABLE Emp (
    ID INT,
    Name VARCHAR(50),
    Salary INT
);
-- EmpDetails
INSERT INTO Emp (ID, Name, Salary) VALUES
(1, 'John', 40000),
(2, 'Alex', 25000),
(3, 'Simon', 43000);

CREATE TABLE MaritalStatus (
    ID INT,
    Name VARCHAR(50),
    Status VARCHAR(20)
);
-- MaritalStatus
INSERT INTO MaritalStatus (ID, Name, Status) VALUES
(1, 'John', 'Married'),
(3, 'Simon', 'Married'),
(4, 'Stella', 'Unmarried');
=========================================================================
--Create 1st table
CREATE TABLE CUSTOMERS (
   ID INT,
   NAME VARCHAR(20),
   AGE INT ,
   ADDRESS CHAR(25),
   SALARY DECIMAL(18, 2),       
);
--Insert data 
INSERT INTO CUSTOMERS VALUES
(1, 'Ramesh', 32, 'Ahmedabad', 2000.00 ),
(2, 'Khilan', 25, 'Delhi', 1500.00 ),
(3, 'Kaushik', 23, 'Kota', 2000.00 ),
(4, 'Chaitali', 25, 'Mumbai', 6500.00 ),
(5, 'Hardik', 27, 'Bhopal', 8500.00 ),
(6, 'Komal', 22, 'Hyderabad', 4500.00 ),
(7, 'Muffy', 24, 'Indore', 10000.00 );

--Create 2nd table
CREATE TABLE ORDERS (
   OID INT,
   DATE VARCHAR (20),
   CUSTOMER_ID INT,
   AMOUNT DECIMAL(18, 2)
);
--Insert some records
INSERT INTO ORDERS VALUES 
(102, '2009-10-08 00:00:00', 3, 3000.00),
(100, '2009-10-08 00:00:00', 3, 1500.00),
(101, '2009-11-20 00:00:00', 2, 1560.00),
(103, '2008-05-20 00:00:00', 4, 2060.00);
=========================================================================
Self Join
CREATE TABLE Employees (
  EmployeeID   INT       PRIMARY KEY,
  Name         VARCHAR(50),
  ManagerID    INT       NULL
);

INSERT INTO Employees (EmployeeID, Name, ManagerID) VALUES
  (1, 'Alice', NULL),
  (2, 'Bob',   1),
  (3, 'Carol', 1),
  (4, 'Dave',  2),
  (5, 'Eve',   2);

-- Self‑join to list employees and their managers
SELECT 
  e.EmployeeID,
  e.Name AS Employee,
  e.ManagerID,
  m.Name AS ManagerName
FROM Employees AS e
LEFT JOIN Employees AS m
  ON e.ManagerID = m.EmployeeID;
=========================================================================
4.8-Window Function
--Create table query
CREATE TABLE employee (
  Name       VARCHAR(50),
  Age        INT,
  Department VARCHAR(50),
  Salary     INT
);

INSERT INTO employee (Name, Age, Department, Salary) VALUES
  ('Ramesh',   20, 'Finance', 50000),
  ('Suresh',   22, 'Finance', 50000),
  ('Ram',      28, 'Finance', 20000),
  ('Deep',     25, 'Sales',   30000),
  ('Pradeep',  22, 'Sales',   20000);

--Query 1 – Calculate Average Salary per Department
SELECT 
  Name,
  Age,
  Department,
  Salary,
  AVG(Salary) OVER (PARTITION BY Department) AS Avg_Salary
FROM employee;

--Query 2 – Rank Employees by Salary within Department
SELECT
  Name,
  Department,
  Salary,
  RANK() OVER (PARTITION BY Department ORDER BY Salary DESC) AS emp_rank
FROM employee;
=========================================================================
Lead() and Lag()
--Table Creation & Sample Data
CREATE TABLE employee_sales (
  Name       VARCHAR(50),
  Dept       VARCHAR(50),
  SaleDate   DATE,
  SalesAmt   INT
);

INSERT INTO employee_sales (Name, Dept, SaleDate, SalesAmt) VALUES
  ('Alice', 'Finance', '2025-01-01', 1000),
  ('Bob',   'Finance', '2025-01-02', 1500),
  ('Carol', 'Finance', '2025-01-03', 1200),
  ('Dave',  'Sales',   '2025-01-01', 2000),
  ('Eve',   'Sales',   '2025-01-02', 1800),
  ('Frank', 'Sales',   '2025-01-03', 2200);

--Query result
SELECT
  Name, Dept, SaleDate, SalesAmt,
  LAG(SalesAmt) OVER (PARTITION BY Dept ORDER BY SaleDate) AS PrevSale,
  LEAD(SalesAmt) OVER (PARTITION BY Dept ORDER BY SaleDate) AS NextSale
FROM employee_sales;

