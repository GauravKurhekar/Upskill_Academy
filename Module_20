--Create 3 sample tables using CREATE TABLE AS SELECT (CTAS):
--1. customers
CREATE OR REPLACE TABLE customers AS
SELECT * FROM VALUES
  (1, 'Alice', 'Mumbai', '2020-01-15'),
  (2, 'Bob', 'Pune', '2021-03-10'),
  (3, 'Charlie', 'Bangalore', '2019-07-25'),
  (4, 'David', 'Hyderabad', '2020-11-05'),
  (5, 'Eva', 'Chennai', '2022-05-30')
AS customers (customer_id, name, city, join_date);

--2. products
CREATE OR REPLACE TABLE products AS
SELECT * FROM VALUES
  (101, 'Laptop', 'Electronics', 70000),
  (102, 'Smartphone', 'Electronics', 30000),
  (103, 'Desk', 'Furniture', 15000),
  (104, 'Chair', 'Furniture', 5000),
  (105, 'Pen Drive', 'Electronics', 1000)
AS products (product_id, product_name, category, price);

--3. sales
CREATE OR REPLACE TABLE sales AS
SELECT * FROM VALUES
  (1001, 1, 101, '2024-07-01', 1),
  (1002, 2, 102, '2024-07-03', 2),
  (1003, 3, 103, '2024-07-10', 1),
  (1004, 1, 105, '2024-07-15', 5),
  (1005, 4, 104, '2024-07-12', 2),
  (1006, 5, 101, '2024-07-05', 1),
  (1007, 3, 105, '2024-07-07', 10),
  (1008, 2, 103, '2024-07-08', 1)
AS sales (sale_id, customer_id, product_id, sale_date, quantity);

--joins all 3 tables and performs aggregation
SELECT
  c.city,
  p.category,
  p.product_name,
  SUM(s.quantity) AS total_units_sold,
  SUM(p.price * s.quantity) AS total_revenue,
  COUNT(DISTINCT s.customer_id) AS unique_customers,
  MAX(s.sale_date) AS last_purchase_date
FROM sales s
JOIN customers c ON s.customer_id = c.customer_id
JOIN products p ON s.product_id = p.product_id
GROUP BY c.city, p.category, p.product_name
ORDER BY total_revenue DESC;
